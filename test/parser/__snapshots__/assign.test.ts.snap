// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`basic 1`] = `
{
  "out": Out {
    "content": ""use strict";let s = "";Object.assign(c, {x: c.y,});s+=e(c.x);s+=" = ";s+=e(c.y);return s;",
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
  },
  "smp": SMP {
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
    "template": "{{ assign x = y }}{{ x }} = {{ y }}",
  },
}
`;

exports[`destructuring 1`] = `
{
  "out": Out {
    "content": ""use strict";let s = "";Object.assign(c, {x: c.a.x,y: c.a.y,z: c.a.z,});s+=e(c.x);s+=",";s+=e(c.y);s+=",";s+=e(c.z);return s;",
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
  },
  "smp": SMP {
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
    "template": "{{ assign x,y,z = a }}{{ x }},{{ y }},{{ z }}",
  },
}
`;

exports[`duo 1`] = `
{
  "out": Out {
    "content": ""use strict";let s = "";Object.assign(c, {x: 'y',});s+=e(c.x);Object.assign(c, {x: "y",});s+=e(c.x);return s;",
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
  },
  "smp": SMP {
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
    "template": "{{ assign x = 'y' }}{{ x }}{{ assign x = "y" }}{{ x }}",
  },
}
`;

exports[`filter 1`] = `
{
  "out": Out {
    "content": ""use strict";let s = "";Object.assign(c, {x: f.split(c.y),});s+=e(c.x);s+=" from ";s+=e(c.y);return s;",
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
  },
  "smp": SMP {
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
    "template": "{{ assign x = y | split }}{{ x }} from {{ y }}",
  },
}
`;

exports[`filter w/ params 1`] = `
{
  "out": Out {
    "content": ""use strict";let s = "";Object.assign(c, {char: f.split(c.name,""),});s+=e(c.char);s+=" from ";s+=e(c.name);return s;",
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
  },
  "smp": SMP {
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
    "template": "{{ assign char = name | split "" }}{{ char }} from {{ name }}",
  },
}
`;

exports[`nesting 1`] = `
{
  "out": Out {
    "content": ""use strict";let s = "";Object.assign(c, {x: c.y,});Object.assign(c, {z: c.x,});s+=e(c.x);s+=" = ";s+=e(c.y);s+=" = ";s+=e(c.z);return s;",
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
  },
  "smp": SMP {
    "options": {
      "autoEscape": true,
      "debug": false,
      "strictMode": true,
      "stripComments": true,
      "tagEnd": "}}",
      "tagStart": "{{",
      "trimWhitespace": true,
    },
    "template": "{{ assign x = y }}{{ assign z = x }}{{ x }} = {{ y }} = {{ z }}",
  },
}
`;
